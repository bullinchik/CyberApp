// <auto-generated />
using System;
using CyberApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CyberApp.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230611110901_QuestionAnswer field rename")]
    partial class QuestionAnswerfieldrename
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CyberApp.Data.Model.Entity.CharacterPresetStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StatId");

                    b.ToTable("CharacterStats");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.CharacterSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.ClassQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClassQuestions");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.ClassQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassQuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassQuestionId");

                    b.ToTable("ClassQuestionAnswers");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.GeneralQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GeneralQuestions");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.GeneralQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GeneralQuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GeneralQuestionId");

                    b.ToTable("GeneralQuestionAnswers");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stat");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Models.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CharacterClasses");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseStatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BaseStatId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Models.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.CharacterPresetStats", b =>
                {
                    b.HasOne("CyberApp.Data.Model.Entity.Stat", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.ClassQuestionAnswer", b =>
                {
                    b.HasOne("CyberApp.Data.Model.Entity.ClassQuestion", null)
                        .WithMany("Answers")
                        .HasForeignKey("ClassQuestionId");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.GeneralQuestionAnswer", b =>
                {
                    b.HasOne("CyberApp.Data.Model.Entity.GeneralQuestion", null)
                        .WithMany("Answers")
                        .HasForeignKey("GeneralQuestionId");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Models.Skill", b =>
                {
                    b.HasOne("CyberApp.Data.Model.Models.Stat", "BaseStat")
                        .WithMany()
                        .HasForeignKey("BaseStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseStat");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.ClassQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("CyberApp.Data.Model.Entity.GeneralQuestion", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
